from docx import Document
from docx.shared import Inches


# from textwrap import TextWrapper
# from PDFWriter import PDFWriter

'''Function for converting docx to pdf'''
def docx_to_pdf(infilename, outfilename):

    try:
        infil = opendocx(infilename)
    except Exception, e:
        print "Error opening infilename"
        print "Exception: " + repr(e) + "\n"
        sys.exit(1)

    paragraphs = getdocumenttext(infil)

    pw = PDFWriter(outfilename)
    pw.setFont("Courier", 12)
    pw.setHeader("DOCXtoPDF - convert text in DOCX file to PDF")
    pw.setFooter("Generated by xtopdf and python-docx")
    wrapper = TextWrapper(width=70, drop_whitespace=False)

    # For Unicode handling.
    new_paragraphs = []
    for paragraph in paragraphs:
        new_paragraphs.append(paragraph.encode("utf-8"))

    for paragraph in new_paragraphs:
        lines = wrapper.wrap(paragraph)
        for line in lines:
            pw.writeLine(line)
        pw.writeLine("")

    pw.savePage()
    pw.close()


'''Function for merging application pdf with other attachments.
   All upload files will be available in static/uploads folder
   All generated application pdfs will be avilable in static/applications folder '''
def mergepdf(outpdfname, filenames, application_no):
	print "Going to mergepdf"
	from PyPDF2 import PdfFileMerger
	from PyPDF2 import PdfFileReader
	merger = PdfFileMerger(strict=False)
	merger.append(PdfFileReader(file(outpdfname, 'rb')))
	print outpdfname


	import img2pdf 
	from PIL import Image
	from fpdf import FPDF
	img_pdf = FPDF()
	img_pdf_path = "static/uploads/img.pdf"

	for filename in filenames:
		file_type = filename.split(".")[1]

		if file_type=="png" or  file_type=="jpg" or  file_type=="jpeg":
		    img_path =  "static/uploads/" + str(filename)
		    # img_pdf.add_page()
    		# img_pdf.image(img_path,5,5,5,5)
		    image_ = Image.open(img_path)
		    pdf_bytes = img2pdf.convert(image_.filename)
		    fileimg = open(img_pdf_path, "w") 
		    fileimg.write(pdf_bytes) 
		    image_.close()
		    fileimg.close()
		    merger.append(PdfFileReader(file(img_pdf_path, 'rb')))
		else:
			thispdf = "static/uploads/" + str(filename)
			print thispdf
			merger.append(PdfFileReader(file(thispdf, 'rb')))

	
	# img_pdf.output(img_pdf_path, "F")
	# merger.append(PdfFileReader(file(img_pdf_path, 'rb')))


	# merger.append(img_pdf_path)

	# for pdf in filenames[2:]:
	# 	thispdf = "static/uploads/" + str(pdf)
	# 	print thispdf
	# 	merger.append(thispdf)
	# 	print thispdf, type(thispdf)

	merger.write("static/applications/"+str(application_no)+".pdf")    



'''Function creates application docx using passed parameters.
   application pdf will be stored in static/applications folder named as application_no.pdf'''
def createDocx(params):
	document = Document()

	document.add_heading('Application', 0)

	document.add_paragraph(
	    'Application Number: '+str(params[0])+'\n', style='List Number'
	)

	document.add_paragraph(
	    'Post Applied for: '+params[1]+'\n', style='List Number'
	)

	document.add_paragraph(
	    'Name: '+params[2]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Category: '+params[3]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Disability: '+params[4]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Date of Birth: '+params[5]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Nationality: '+params[6]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Gender: '+params[7]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Marital status: '+params[8]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Address: '+params[9]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Email ID: '+params[10]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Education', style='List Number'
	)

	table_edu = document.add_table(rows=1, cols=5)
	hdr_cells = table_edu.rows[0].cells
	hdr_cells[0].text = 'Exam Passed'
	hdr_cells[1].text = 'Board/university'
	hdr_cells[2].text = 'Year of Passing'
	hdr_cells[3].text = 'Specialization'
	hdr_cells[4].text = 'CGPA/Percentage'
	row_cells = table_edu.add_row().cells
	row_cells[0].text = 'Bachelors'
	row_cells[1].text = params[11]
	row_cells[2].text = params[12]
	row_cells[3].text = params[13]
	row_cells[4].text = params[14]
	print "check params 49 ------------------ ",params[49]
	print params[49]!=""
	if params[49]!="":
		row_cells = table_edu.add_row().cells
		row_cells[0].text = 'Bachelors 2'
		row_cells[1].text = params[49]
		row_cells[2].text = params[50]
		row_cells[3].text = params[51]
		row_cells[4].text = params[52]
		print "Added bachelors 2",params[49]," ",params[50]," ",params[51]," ",params[52]

	row_cells = table_edu.add_row().cells
	row_cells[0].text = 'Masters'
	row_cells[1].text = params[15]
	row_cells[2].text = params[16]
	row_cells[3].text = params[17]
	row_cells[4].text = params[18]
	if params[53]!="":
		row_cells = table_edu.add_row().cells
		row_cells[0].text = 'Masters 2'
		row_cells[1].text = params[53]
		row_cells[2].text = params[54]
		row_cells[3].text = params[55]
		row_cells[4].text = params[56]

	document.add_paragraph(
	    'PHD: ', style='List Number'
	)
	table_phd=document.add_table(rows=1, cols=6)
	hdr_cells = table_phd.rows[0].cells
	hdr_cells[0].text = 'University'
	hdr_cells[1].text = 'Year of Graduation'
	hdr_cells[2].text = 'Date of thesis submission'
	hdr_cells[3].text = 'Date of Defence'
	hdr_cells[4].text = 'Specialization'
	hdr_cells[5].text = 'CGPA'
	row_cells = table_phd.add_row().cells
	row_cells[0].text = params[19]
	row_cells[1].text = params[20]
	row_cells[2].text = params[21]
	row_cells[3].text = params[22]
	row_cells[4].text = params[23]
	row_cells[5].text = params[24]

	document.add_paragraph(
	    'GATE Year: '+params[25]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'GATE Score: '+params[26]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Research Specialization: '+params[27]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Research Interests: '+params[28]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Post Doc Specialization: '+params[29]+'\n', style='List Number'
	)
	document.add_paragraph(
	    'Present Position with Salary Details: ', style='List Number'
	)

	table_pre_pos=document.add_table(rows=1, cols=4)
	hdr_cells = table_pre_pos.rows[0].cells
	hdr_cells[0].text = 'Position'
	hdr_cells[1].text = 'Pay Band'
	hdr_cells[2].text = 'Grade Pay'
	hdr_cells[3].text = 'Consolidated Salary'
	row_cells = table_pre_pos.add_row().cells
	row_cells[0].text = params[30]
	row_cells[1].text = params[31]
	row_cells[2].text = params[32]
	row_cells[3].text = params[33]

	document.add_paragraph(
	    'Research/Teaching/Industrial Experience(if any): ', style='List Number'
	)
	table_reas_exper=document.add_table(rows=1, cols=6)
	hdr_cells = table_reas_exper.rows[0].cells
	hdr_cells[0].text = 'Name of the Organization'
	hdr_cells[1].text = 'Start Date'
	hdr_cells[2].text = 'End Date'
	hdr_cells[3].text = 'Full Time (Yes/No)'
	hdr_cells[4].text = 'Designation'
	hdr_cells[5].text = 'Type of Work'
	for item in params[34]:
		row_cells = table_reas_exper.add_row().cells
		row_cells[0].text = str(item[0])
		row_cells[1].text = str(item[1])
		row_cells[2].text = str(item[2])
		row_cells[3].text = str(item[3])
		row_cells[4].text = str(item[4])
		row_cells[5].text = str(item[5])

	document.add_paragraph(
	    'Projects', style='List Number'
	)
	table_proj=document.add_table(rows=1, cols=4)
	hdr_cells = table_proj.rows[0].cells
	hdr_cells[0].text = 'Type of Project'
	hdr_cells[1].text = 'project Title'
	hdr_cells[2].text = 'Project Amount'
	hdr_cells[3].text = 'Project Details'
	for i in range(0,len(params[35])):
		row_cells = table_proj.add_row().cells
		row_cells[0].text = params[35][i][0]
		row_cells[1].text = params[35][i][1]
		row_cells[2].text = params[35][i][2]
		row_cells[3].text = params[35][i][3]

	document.add_paragraph(
	    'Referees', style='List Number'
	)
	table_refree=document.add_table(rows=1, cols=4)
	hdr_cells = table_refree.rows[0].cells
	hdr_cells[0].text = 'Name'
	hdr_cells[1].text = 'Email'
	hdr_cells[2].text = 'Designation'
	hdr_cells[3].text = 'Address'
	row_cells = table_refree.add_row().cells
	row_cells[0].text = params[36]
	row_cells[1].text = params[37]
	row_cells[2].text = params[38]
	row_cells[3].text = params[39]
	row_cells = table_refree.add_row().cells
	row_cells[0].text = params[40]
	row_cells[1].text = params[41]
	row_cells[2].text = params[42]
	row_cells[3].text = params[43]
	row_cells = table_refree.add_row().cells
	row_cells[0].text = params[44]
	row_cells[1].text = params[45]
	row_cells[2].text = params[46]
	row_cells[3].text = params[47]


	document.add_page_break()
	filen = 'static/applications/'+ str(params[0])+'.docx'
	document.save(filen)

	from docxtopdf import convert_to
	convert_to('static/applications', filen)

	mergepdf("static/applications/"+str(params[0])+".pdf", params[48], str(params[0]))

